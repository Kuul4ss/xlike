// Mocks generated by Mockito 5.4.4 from annotations
// in xlike/test/posts/services/posts/test_posts_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:xlike/models/domain/post.dart' as _i2;
import 'package:xlike/models/requests/create_post_request.dart' as _i6;
import 'package:xlike/models/requests/request_pagination_info.dart' as _i5;
import 'package:xlike/posts/services/posts/posts_data_source.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePost_0 extends _i1.SmartFake implements _i2.Post {
  _FakePost_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostsDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsDataSource extends _i1.Mock implements _i3.PostsDataSource {
  MockPostsDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Post>> getAllPosts(
          {_i5.RequestPaginationInfo? requestPaginationInfo}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [],
          {#requestPaginationInfo: requestPaginationInfo},
        ),
        returnValue: _i4.Future<List<_i2.Post>>.value(<_i2.Post>[]),
      ) as _i4.Future<List<_i2.Post>>);

  @override
  _i4.Future<List<_i2.Post>> getAllPostsOfUser(
    int? userId, {
    _i5.RequestPaginationInfo? requestPaginationInfo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPostsOfUser,
          [userId],
          {#requestPaginationInfo: requestPaginationInfo},
        ),
        returnValue: _i4.Future<List<_i2.Post>>.value(<_i2.Post>[]),
      ) as _i4.Future<List<_i2.Post>>);

  @override
  _i4.Future<_i2.Post> getPostDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getPostDetail,
          [id],
        ),
        returnValue: _i4.Future<_i2.Post>.value(_FakePost_0(
          this,
          Invocation.method(
            #getPostDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Post>);

  @override
  _i4.Future<void> createPost(_i6.CreatePostRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [request],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
